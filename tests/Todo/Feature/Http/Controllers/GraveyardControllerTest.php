<?php

namespace Tests\Todo\Feature\Http\Controllers;

use App\Models\Graveyard;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\GraveyardController
 */
class GraveyardControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function destroy_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $graveyard = Graveyard::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->delete(route('graveyard.destroy', ['id' => $graveyard->id]));

        $response->assertRedirect(withSuccess('Resurrection Successfully Canceled!'));
        $this->assertModelMissing($graveyard);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function faceted_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('graveyard.'));

        $response->assertOk();
        $response->assertViewIs();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $graveyard = Graveyard::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('graveyard.store'), [
            'torrent_id' => $graveyard->id,
        ]);

        $response->assertRedirect(withErrors('Torrent Resurrection Failed! This torrent is already pending a resurrection.'));

        // TODO: perform additional assertions
    }

    // test cases...
}
