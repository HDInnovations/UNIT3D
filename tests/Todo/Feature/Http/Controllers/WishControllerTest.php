<?php

namespace Tests\Todo\Feature\Http\Controllers;

use App\Models\User;
use App\Models\Wish;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\WishController
 */
class WishControllerTest extends TestCase
{
    public function testDestroyReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wish = Wish::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('wishes.destroy', ['id' => $wish->id]));

        $response->assertRedirect(withSuccess('Wish Successfully Removed!'));

        // TODO: perform additional assertions
    }

    public function testIndexReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $wish = Wish::factory()->create();
        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('wishes.index', ['username' => $wish->username]));

        $response->assertOk();
        $response->assertViewIs('user.wishlist');
        $response->assertViewHas('user');
        $response->assertViewHas('wishes');
        $response->assertViewHas('route');

        // TODO: perform additional assertions
    }

    public function testStoreReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('wishes.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withErrors('Wish already exists!'));

        // TODO: perform additional assertions
    }

    // test cases...
}
