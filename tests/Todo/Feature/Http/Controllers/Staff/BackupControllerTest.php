<?php

namespace Tests\Todo\Feature\Http\Controllers\Staff;

use App\Models\User;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Staff\BackupController
 */
class BackupControllerTest extends TestCase
{
    public function testCreateReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('staff.backups.full'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    public function testDatabaseReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('staff.backups.database'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    public function testDestroyReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->delete(route('staff.backups.destroy'));

        $response->assertOk();
        $this->assertDeleted($staff);

        // TODO: perform additional assertions
    }

    public function testDownloadReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('staff.backups.download'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    public function testFilesReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->post(route('staff.backups.files'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    public function testIndexReturnsAnOkResponse()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = User::factory()->create();

        $response = $this->actingAs($user)->get(route('staff.backups.index'));

        $response->assertOk();
        $response->assertViewIs('Staff.backup.index');

        // TODO: perform additional assertions
    }

    // test cases...
}
