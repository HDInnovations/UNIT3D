<?php

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

uses(TestCase::class);
uses(RefreshDatabase::class);

/**
 * @see \App\Http\Controllers\Staff\UserController
 */
test('edit returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->post(route('user_edit', ['username' => $user->username]), [
        // TODO: send request data
    ]);

    $response->assertRedirect(withErrors('You Are Not Authorized To Perform This Action!'));

    // TODO: perform additional assertions
});

test('index returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('user_search'));

    $response->assertOk();
    $response->assertViewIs('Staff.user.user_search');
    $response->assertViewHas('users');
    $response->assertViewHas('uploaders');
    $response->assertViewHas('mods');
    $response->assertViewHas('admins');
    $response->assertViewHas('coders');

    // TODO: perform additional assertions
});

test('permissions returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->post(route('user_permissions', ['username' => $user->username]), [
        // TODO: send request data
    ]);

    $response->assertRedirect(withSuccess('Account Permissions Successfully Edited'));

    // TODO: perform additional assertions
});

test('search returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('user_results'));

    $response->assertOk();
    $response->assertViewIs('Staff.user.user_results');
    $response->assertViewHas('users');

    // TODO: perform additional assertions
});

test('settings returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $user = User::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('user_setting', ['username' => $user->username]));

    $response->assertOk();
    $response->assertViewIs('Staff.user.user_edit');
    $response->assertViewHas('user');
    $response->assertViewHas('groups');
    $response->assertViewHas('notes');

    // TODO: perform additional assertions
});
