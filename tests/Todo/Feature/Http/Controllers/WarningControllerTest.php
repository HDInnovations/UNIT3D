<?php

use App\Models\User;
use App\Models\Warning;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

uses(TestCase::class);
uses(RefreshDatabase::class);

/**
 * @see \App\Http\Controllers\WarningController
 */
test('deactivate returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('deactivateWarning', ['id' => $warning->id]));

    $response->assertRedirect(withSuccess('Warning Was Successfully Deactivated'));

    // TODO: perform additional assertions
});

test('deactivate all warnings returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('massDeactivateWarnings', ['username' => $warning->username]));

    $response->assertRedirect(withSuccess('All Warnings Were Successfully Deactivated'));

    // TODO: perform additional assertions
});

test('delete all warnings returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->delete(route('massDeleteWarnings', ['username' => $warning->username]));

    $response->assertRedirect(withSuccess('All Warnings Were Successfully Deleted'));

    // TODO: perform additional assertions
});

test('delete warning returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->delete(route('deleteWarning', ['id' => $warning->id]));

    $response->assertRedirect(withSuccess('Warning Was Successfully Deleted'));

    // TODO: perform additional assertions
});

test('restore warning returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('restoreWarning', ['id' => $warning->id]));

    $response->assertRedirect(withSuccess('Warning Was Successfully Restored'));

    // TODO: perform additional assertions
});

test('show returns an ok response', function () {
    $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

    $warning = Warning::factory()->create();
    $user = User::factory()->create();

    $response = $this->actingAs($user)->get(route('warnings.show', ['username' => $warning->username]));

    $response->assertOk();
    $response->assertViewIs('user.warninglog');
    $response->assertViewHas('warnings');
    $response->assertViewHas('warningcount');
    $response->assertViewHas('softDeletedWarnings');
    $response->assertViewHas('softDeletedWarningCount');
    $response->assertViewHas('user');

    // TODO: perform additional assertions
});
