<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\SubtitleController
 */
class SubtitleControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $torrent = \App\Models\Torrent::factory()->create();
        $subtitle = \App\Models\Subtitle::factory()->create();
        $mediaLanguages = \App\Models\MediaLanguage::factory()->times(3)->create();

        $response = $this->get(route('subtitles.create', ['torrent_id' => $subtitle->torrent_id]));

        $response->assertOk();
        $response->assertViewIs('subtitle.create');
        $response->assertViewHas('torrent', $torrent);
        $response->assertViewHas('media_languages');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subtitle = \App\Models\Subtitle::factory()->create();

        $response = $this->delete(route('subtitles.destroy', ['id' => $subtitle->id]));

        $response->assertOk();
        $this->assertDeleted($subtitle);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subtitle = \App\Models\Subtitle::factory()->create();

        $response = $this->get(route('subtitles.download', ['id' => $subtitle->id]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('subtitles.index'));

        $response->assertOk();
        $response->assertViewIs('subtitle.index');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('subtitles.store'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subtitle = \App\Models\Subtitle::factory()->create();

        $response = $this->post(route('subtitles.update', ['id' => $subtitle->id]), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
