<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\ForumController
 */
class ForumControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $forums = \App\Models\Forum::factory()->times(3)->create();

        $response = $this->get(route('forums.index'));

        $response->assertOk();
        $response->assertViewIs('forum.index');
        $response->assertViewHas('categories');
        $response->assertViewHas('num_posts');
        $response->assertViewHas('num_forums');
        $response->assertViewHas('num_topics');
        $response->assertViewHas('user');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function latest_posts_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $posts = \App\Models\Post::factory()->times(3)->create();

        $response = $this->get(route('forum_latest_posts'));

        $response->assertOk();
        $response->assertViewIs('forum.latest_posts');
        $response->assertViewHas('results');
        $response->assertViewHas('user');
        $response->assertViewHas('num_posts');
        $response->assertViewHas('num_forums');
        $response->assertViewHas('num_topics');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function latest_topics_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $forums = \App\Models\Forum::factory()->times(3)->create();
        $topics = \App\Models\Topic::factory()->times(3)->create();

        $response = $this->get(route('forum_latest_topics'));

        $response->assertOk();
        $response->assertViewIs('forum.latest_topics');
        $response->assertViewHas('results');
        $response->assertViewHas('user');
        $response->assertViewHas('num_posts');
        $response->assertViewHas('num_forums');
        $response->assertViewHas('num_topics');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function search_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $forums = \App\Models\Forum::factory()->times(3)->create();

        $response = $this->get(route('forum_search_form'));

        $response->assertOk();
        $response->assertViewIs($logger);
        $response->assertViewHas('categories');
        $response->assertViewHas('results');
        $response->assertViewHas('user');
        $response->assertViewHas('name');
        $response->assertViewHas('body');
        $response->assertViewHas('num_posts');
        $response->assertViewHas('num_forums');
        $response->assertViewHas('num_topics');
        $response->assertViewHas('params');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $forum = \App\Models\Forum::factory()->create();

        $response = $this->get(route('forums.show', ['id' => $forum->id]));

        $response->assertOk();
        $response->assertViewIs('forum.display');
        $response->assertViewHas('forum', $forum);
        $response->assertViewHas('topics');
        $response->assertViewHas('category');
        $response->assertViewHas('num_posts');
        $response->assertViewHas('num_forums');
        $response->assertViewHas('num_topics');
        $response->assertViewHas('user');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function subscriptions_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $forums = \App\Models\Forum::factory()->times(3)->create();

        $response = $this->get(route('forum_subscriptions'));

        $response->assertOk();
        $response->assertViewIs('forum.subscriptions');
        $response->assertViewHas('results');
        $response->assertViewHas('user');
        $response->assertViewHas('name');
        $response->assertViewHas('body');
        $response->assertViewHas('num_posts');
        $response->assertViewHas('num_forums');
        $response->assertViewHas('num_topics');
        $response->assertViewHas('params');
        $response->assertViewHas('forum_neos');
        $response->assertViewHas('topic_neos');

        // TODO: perform additional assertions
    }

    // test cases...
}
